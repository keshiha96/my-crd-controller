# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ConfigMap
apiVersion: v1
metadata:
  name: worker-conf
  namespace: keshi
data:
  deployment.yaml: "################################################################################\n#
    \  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved\n#\n#
    \  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\n#   you
    may not use this file except in compliance with the License.\n#   You may obtain
    a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#
    \  Unless required by applicable law or agreed to in writing, software\n#   distributed
    under the License is distributed on an \\\"AS IS\\\" BASIS,\n#   WITHOUT WARRANTIES
    OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for
    the specific language governing permissions and\n#   limitations under the License.\n################################################################################\n\n
    \ # Carbon Configuration Parameters\nwso2.carbon:\n  type: wso2-apim-analytics\n
    \   # value to uniquely identify a server\n  id: wso2-am-analytics\n    # server
    name\n  name: WSO2 API Manager Analytics Server\n    # ports used by this server\n
    \ ports:\n      # port offset\n    offset: 1\n\nwso2.transport.http:\n  transportProperties:\n
    \   -\n      name: \"server.bootstrap.socket.timeout\"\n      value: 60\n    -\n
    \     name: \"client.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name:
    \"latency.metrics.enabled\"\n      value: true\n\n  listenerConfigurations:\n
    \   -\n      id: \"default\"\n      host: \"0.0.0.0\"\n      port: 9091\n    -\n
    \     id: \"msf4j-https\"\n      host: \"0.0.0.0\"\n      port: 9444\n      scheme:
    https\n      keyStoreFile: \"${carbon.home}/resources/security/wso2carbon.jks\"\n
    \     keyStorePassword: wso2carbon\n      certPass: wso2carbon\n\n  senderConfigurations:\n
    \   -\n      id: \"http-sender\"\n\nsiddhi.stores.query.api:\n  transportProperties:\n
    \   -\n      name: \"server.bootstrap.socket.timeout\"\n      value: 60\n    -\n
    \     name: \"client.bootstrap.socket.timeout\"\n      value: 60\n    -\n      name:
    \"latency.metrics.enabled\"\n      value: true\n\n  listenerConfigurations:\n
    \   -\n      id: \"default\"\n      host: \"0.0.0.0\"\n      port: 7071\n    -\n
    \     id: \"msf4j-https\"\n      host: \"0.0.0.0\"\n      port: 7444\n      scheme:
    https\n      keyStoreFile: \"${carbon.home}/resources/security/wso2carbon.jks\"\n
    \     keyStorePassword: wso2carbon\n      certPass: wso2carbon\n\n  # Configuration
    used for the databridge communication\ndatabridge.config:\n    # No of worker
    threads to consume events\n    # THIS IS A MANDATORY FIELD\n  workerThreads: 10\n
    \   # Maximum amount of messages that can be queued internally in MB\n    # THIS
    IS A MANDATORY FIELD\n  maxEventBufferCapacity: 10000000\n    # Queue size; the
    maximum number of events that can be stored in the queue\n    # THIS IS A MANDATORY
    FIELD\n  eventBufferSize: 2000\n    # Keystore file path\n    # THIS IS A MANDATORY
    FIELD\n  keyStoreLocation : ${sys:carbon.home}/resources/security/wso2carbon.jks\n
    \   # Keystore password\n    # THIS IS A MANDATORY FIELD\n  keyStorePassword :
    wso2carbon\n    # Session Timeout value in mins\n    # THIS IS A MANDATORY FIELD\n
    \ clientTimeoutMin: 30\n    # Data receiver configurations\n    # THIS IS A MANDATORY
    FIELD\n  dataReceivers:\n  -\n      # Data receiver configuration\n    dataReceiver:\n
    \       # Data receiver type\n        # THIS IS A MANDATORY FIELD\n      type:
    Thrift\n        # Data receiver properties\n      properties:\n        tcpPort:
    '7611'\n        sslPort: '7711'\n\n  -\n      # Data receiver configuration\n
    \   dataReceiver:\n        # Data receiver type\n        # THIS IS A MANDATORY
    FIELD\n      type: Binary\n        # Data receiver properties\n      properties:\n
    \       tcpPort: '9611'\n        sslPort: '9711'\n        tcpReceiverThreadPoolSize:
    '100'\n        sslReceiverThreadPoolSize: '100'\n        hostName: 0.0.0.0\n\n
    \ # Configuration of the Data Agents - to publish events through databridge\ndata.agent.config:\n
    \   # Data agent configurations\n    # THIS IS A MANDATORY FIELD\n  agents:\n
    \ -\n      # Data agent configuration\n    agentConfiguration:\n        # Data
    agent name\n        # THIS IS A MANDATORY FIELD\n      name: Thrift\n        #
    Data endpoint class\n        # THIS IS A MANDATORY FIELD\n      dataEndpointClass:
    org.wso2.carbon.databridge.agent.endpoint.thrift.ThriftDataEndpoint\n        #
    Data publisher strategy\n      publishingStrategy: async\n        # Trust store
    path\n      trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'\n
    \       # Trust store password\n      trustStorePassword: 'wso2carbon'\n        #
    Queue Size\n      queueSize: 32768\n        # Batch Size\n      batchSize: 200\n
    \       # Core pool size\n      corePoolSize: 1\n        # Socket timeout in milliseconds\n
    \     socketTimeoutMS: 30000\n        # Maximum pool size\n      maxPoolSize:
    1\n        # Keep alive time in pool\n      keepAliveTimeInPool: 20\n        #
    Reconnection interval\n      reconnectionInterval: 30\n        # Max transport
    pool size\n      maxTransportPoolSize: 250\n        # Max idle connections\n      maxIdleConnections:
    250\n        # Eviction time interval\n      evictionTimePeriod: 5500\n        #
    Min idle time in pool\n      minIdleTimeInPool: 5000\n        # Secure max transport
    pool size\n      secureMaxTransportPoolSize: 250\n        # Secure max idle connections\n
    \     secureMaxIdleConnections: 250\n        # secure eviction time period\n      secureEvictionTimePeriod:
    5500\n        # Secure min idle time in pool\n      secureMinIdleTimeInPool: 5000\n
    \       # SSL enabled protocols\n      sslEnabledProtocols: TLSv1.1,TLSv1.2\n
    \       # Ciphers\n      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n
    \ -\n      # Data agent configuration\n    agentConfiguration:\n        # Data
    agent name\n        # THIS IS A MANDATORY FIELD\n      name: Binary\n        #
    Data endpoint class\n        # THIS IS A MANDATORY FIELD\n      dataEndpointClass:
    org.wso2.carbon.databridge.agent.endpoint.binary.BinaryDataEndpoint\n        #
    Data publisher strategy\n      publishingStrategy: async\n        # Trust store
    path\n      trustStorePath: '${sys:carbon.home}/resources/security/client-truststore.jks'\n
    \       # Trust store password\n      trustStorePassword: 'wso2carbon'\n        #
    Queue Size\n      queueSize: 32768\n        # Batch Size\n      batchSize: 200\n
    \       # Core pool size\n      corePoolSize: 1\n        # Socket timeout in milliseconds\n
    \     socketTimeoutMS: 30000\n        # Maximum pool size\n      maxPoolSize:
    1\n        # Keep alive time in pool\n      keepAliveTimeInPool: 20\n        #
    Reconnection interval\n      reconnectionInterval: 30\n        # Max transport
    pool size\n      maxTransportPoolSize: 250\n        # Max idle connections\n      maxIdleConnections:
    250\n        # Eviction time interval\n      evictionTimePeriod: 5500\n        #
    Min idle time in pool\n      minIdleTimeInPool: 5000\n        # Secure max transport
    pool size\n      secureMaxTransportPoolSize: 250\n        # Secure max idle connections\n
    \     secureMaxIdleConnections: 250\n        # secure eviction time period\n      secureEvictionTimePeriod:
    5500\n        # Secure min idle time in pool\n      secureMinIdleTimeInPool: 5000\n
    \       # SSL enabled protocols\n      sslEnabledProtocols: TLSv1.1,TLSv1.2\n
    \       # Ciphers\n      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n\n#
    This is the main configuration for metrics\nwso2.metrics:\n  # Enable Metrics\n
    \ enabled: false\n  reporting:\n    console:\n      - # The name for the Console
    Reporter\n        name: Console\n\n        # Enable Console Reporter\n        enabled:
    false\n\n        # Polling Period in seconds.\n        # This is the period for
    polling metrics from the metric registry and printing in the console\n        pollingPeriod:
    5\n\nwso2.metrics.jdbc:\n  # Data Source Configurations for JDBC Reporters\n  dataSource:\n
    \   # Default Data Source Configuration\n    - &JDBC01\n      # JNDI name of the
    data source to be used by the JDBC Reporter.\n      # This data source should
    be defined in a *-datasources.xml file in conf/datasources directory.\n      dataSourceName:
    java:comp/env/jdbc/WSO2MetricsDB\n      # Schedule regular deletion of metrics
    data older than a set number of days.\n      # It is recommended that you enable
    this job to ensure your metrics tables do not get extremely large.\n      # Deleting
    data older than seven days should be sufficient.\n      scheduledCleanup:\n        #
    Enable scheduled cleanup to delete Metrics data in the database.\n        enabled:
    true\n\n        # The scheduled job will cleanup all data older than the specified
    days\n        daysToKeep: 3\n\n        # This is the period for each cleanup operation
    in seconds.\n        scheduledCleanupPeriod: 86400\n\n  # The JDBC Reporter is
    in the Metrics JDBC Core feature\n  reporting:\n    # The JDBC Reporter configurations
    will be ignored if the Metrics JDBC Core feature is not available in runtime\n
    \   jdbc:\n      - # The name for the JDBC Reporter\n        name: JDBC\n\n        #
    Enable JDBC Reporter\n        enabled: true\n\n        # Source of Metrics, which
    will be used to identify each metric in database -->\n        # Commented to use
    the hostname by default\n        # source: Carbon\n\n        # Alias referring
    to the Data Source configuration\n        dataSource: *JDBC01\n\n        # Polling
    Period in seconds.\n        # This is the period for polling metrics from the
    metric registry and updating the database with the values\n        pollingPeriod:
    60\n\n  # Deployment configuration parameters\nwso2.artifact.deployment:\n    #
    Scheduler update interval\n  updateInterval: 5\n\n  # Periodic Persistence Configuration\nstate.persistence:\n
    \ enabled: false\n  intervalInMin: 1\n  revisionsToKeep: 2\n  persistenceStore:
    org.wso2.carbon.streaming.integrator.core.persistence.FileSystemPersistenceStore\n
    \ config:\n    location: siddhi-app-persistence\n\n  # Secure Vault Configuration\nwso2.securevault:\n
    \ secretRepository:\n    type: org.wso2.carbon.secvault.repository.DefaultSecretRepository\n
    \   parameters:\n      privateKeyAlias: wso2carbon\n      keystoreLocation: ${sys:carbon.home}/resources/security/securevault.jks\n
    \     secretPropertiesFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/secrets.properties\n
    \ masterKeyReader:\n    type: org.wso2.carbon.secvault.reader.DefaultMasterKeyReader\n
    \   parameters:\n      masterKeyReaderFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/master-keys.yaml\n\n
    \ # Datasource Configurations\nwso2.datasources:\n  dataSources:\n    # carbon
    metrics data source\n    - name: WSO2_METRICS_DB\n      description: The datasource
    used for dashboard feature\n      jndiConfig:\n        name: jdbc/WSO2MetricsDB\n
    \     definition:\n        type: RDBMS\n        configuration:\n          jdbcUrl:
    'jdbc:h2:${sys:carbon.home}/wso2/dashboard/database/metrics;AUTO_SERVER=TRUE'\n
    \         username: wso2carbon\n          password: wso2carbon\n          driverClassName:
    org.h2.Driver\n          maxPoolSize: 30\n          idleTimeout: 60000\n          connectionTestQuery:
    SELECT 1\n          validationTimeout: 30000\n          isAutoCommit: false\n\n
    \   # - name: WSO2_PERMISSIONS_DB\n    #   description: The datasource used for
    permission feature\n    #   jndiConfig:\n    #     name: jdbc/PERMISSION_DB\n
    \   #     useJndiReference: true\n    #   definition:\n    #     type: RDBMS\n
    \   #     configuration:\n    #       jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/PERMISSION_DB;IFEXISTS=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;MVCC=TRUE'\n
    \   #       username: wso2carbon\n    #       password: wso2carbon\n    #       driverClassName:
    org.h2.Driver\n    #       maxPoolSize: 10\n    #       idleTimeout: 60000\n    #
    \      connectionTestQuery: SELECT 1\n    #       validationTimeout: 30000\n    #
    \      isAutoCommit: false\n\n    - name: WSO2_PERMISSIONS_DB\n      description:
    The datasource used for permission feature\n      jndiConfig:\n        name: jdbc/PERMISSION_DB\n
    \       useJndiReference: true\n      definition:\n        type: RDBMS\n        configuration:\n
    \         jdbcUrl: 'jdbc:mysql://wso2apim-with-analytics-rdbms-service:3306/PERMISSION_DB?useSSL=false'\n
    \         username: root\n          password: root\n          driverClassName:
    com.mysql.jdbc.Driver\n          maxPoolSize: 10\n          idleTimeout: 60000\n
    \         connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n
    \         isAutoCommit: false\n\n    - name: GEO_LOCATION_DATA\n      description:
    \"The data source used for geo location database\"\n      jndiConfig:\n        name:
    jdbc/GEO_LOCATION_DATA\n      definition:\n        type: RDBMS\n        configuration:\n
    \         jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/worker/database/GEO_LOCATION_DATA;AUTO_SERVER=TRUE'\n
    \         username: wso2carbon\n          password: wso2carbon\n          driverClassName:
    org.h2.Driver\n          maxPoolSize: 50\n          idleTimeout: 60000\n          validationTimeout:
    30000\n          isAutoCommit: false\n\n    # - name: APIM_ANALYTICS_DB\n    #
    \  description: \"The datasource used for APIM statistics aggregated data.\"\n
    \   #   jndiConfig:\n    #     name: jdbc/APIM_ANALYTICS_DB\n    #   definition:\n
    \   #     type: RDBMS\n    #     configuration:\n    #       jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/worker/database/WSO2AM_STATS_DB;AUTO_SERVER=TRUE'\n
    \   #       username: wso2carbon\n    #       password: wso2carbon\n    #       driverClassName:
    org.h2.Driver\n    #       maxPoolSize: 50\n    #       idleTimeout: 60000\n    #
    \      connectionTestQuery: SELECT 1\n    #       validationTimeout: 30000\n    #
    \      isAutoCommit: false\n\n    - name: APIM_ANALYTICS_DB\n      description:
    \"The datasource used for APIM statistics aggregated data.\"\n      jndiConfig:\n
    \       name: jdbc/APIM_ANALYTICS_DB\n      definition:\n        type: RDBMS\n
    \       configuration:\n          jdbcUrl: 'jdbc:mysql://wso2apim-with-analytics-rdbms-service:3306/WSO2AM_STATS_DB?useSSL=false'\n
    \         username: root\n          password: root\n          driverClassName:
    com.mysql.jdbc.Driver\n          maxPoolSize: 50\n          idleTimeout: 60000\n
    \         connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n
    \         isAutoCommit: false\n\n    #Main datasource used in API Manager\n    #
    - name: AM_DB\n    #   description: Main datasource used by API Manager\n    #
    \  jndiConfig:\n    #     name: jdbc/AM_DB\n    #   definition:\n    #     type:
    RDBMS\n    #     configuration:\n    #       jdbcUrl: \"jdbc:h2:${sys:carbon.home}/../wso2am-3.0.0/repository/database/WSO2AM_DB;AUTO_SERVER=TRUE\"\n
    \   #       username: wso2carbon\n    #       password: wso2carbon\n    #       driverClassName:
    org.h2.Driver\n    #       maxPoolSize: 10\n    #       idleTimeout: 60000\n    #
    \      connectionTestQuery: SELECT 1\n    #       validationTimeout: 30000\n    #
    \      isAutoCommit: false\n\n    - name: AM_DB\n      description: Main datasource
    used by API Manager\n      jndiConfig:\n        name: jdbc/AM_DB\n      definition:\n
    \       type: RDBMS\n        configuration:\n          jdbcUrl: 'jdbc:mysql://wso2apim-with-analytics-rdbms-service:3306/WSO2AM_APIMGT_DB?useSSL=false'\n
    \         username: root\n          password: root\n          driverClassName:
    com.mysql.jdbc.Driver\n          maxPoolSize: 10\n          idleTimeout: 60000\n
    \         connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n
    \         isAutoCommit: false\n\n    # - name: WSO2AM_MGW_ANALYTICS_DB\n    #
    \  description: \"The datasource used for APIM MGW analytics data.\"\n    #   jndiConfig:\n
    \   #     name: jdbc/WSO2AM_MGW_ANALYTICS_DB\n    #   definition:\n    #     type:
    RDBMS\n    #     configuration:\n    #       jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/worker/database/WSO2AM_MGW_ANALYTICS_DB;AUTO_SERVER=TRUE'\n
    \   #       username: wso2carbon\n    #       password: wso2carbon\n    #       driverClassName:
    org.h2.Driver\n    #       maxPoolSize: 50\n    #       idleTimeout: 60000\n    #
    \      connectionTestQuery: SELECT 1\n    #       validationTimeout: 30000\n    #
    \      isAutoCommit: false\n\n    - name: WSO2AM_MGW_ANALYTICS_DB\n      description:
    \"The datasource used for APIM MGW analytics data.\"\n      jndiConfig:\n        name:
    jdbc/WSO2AM_MGW_ANALYTICS_DB\n      definition:\n        type: RDBMS\n        configuration:\n
    \         jdbcUrl: 'jdbc:mysql://wso2apim-with-analytics-rdbms-service:3306/WSO2AM_MGW_ANALYTICS_DB?useSSL=false'\n
    \         username: root\n          password: root\n          driverClassName:
    com.mysql.jdbc.Driver\n          maxPoolSize: 50\n          idleTimeout: 60000\n
    \         connectionTestQuery: SELECT 1\n          validationTimeout: 30000\n
    \         isAutoCommit: false\n          \n    - name: WSO2_CLUSTER_DB\n      description:
    \"The datasource used by cluster coordinators in HA deployment\"\n      definition:\n
    \       type: RDBMS\n        configuration:\n          connectionTestQuery: \"SELECT
    1\"\n          driverClassName: org.h2.Driver\n          idleTimeout: 60000\n
    \         isAutoCommit: false\n          jdbcUrl: \"jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/WSO2_CLUSTER_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;AUTO_SERVER=TRUE\"\n
    \         maxPoolSize: 10\n          password: wso2carbon\n          username:
    wso2carbon\n          validationTimeout: 30000\n\nsiddhi:\n  refs:\n    - ref:\n
    \       name: 'grpcSource'\n        type: 'grpc'\n        properties:\n          receiver.url
    : grpc://localhost:9806/org.wso2.grpc.EventService/consume\n  extensions:\n    -\n
    \     extension:\n        name: 'findCountryFromIP'\n        namespace: 'geo'\n
    \       properties:\n          geoLocationResolverClass: org.wso2.extension.siddhi.execution.geo.internal.impl.DefaultDBBasedGeoLocationResolver\n
    \         isCacheEnabled: true\n          cacheSize: 10000\n          isPersistInDatabase:
    true\n          datasource: GEO_LOCATION_DATA\n    -\n      extension:\n        name:
    'findCityFromIP'\n        namespace: 'geo'\n        properties:\n          geoLocationResolverClass:
    org.wso2.extension.siddhi.execution.geo.internal.impl.DefaultDBBasedGeoLocationResolver\n
    \         isCacheEnabled: true\n          cacheSize: 10000\n          isPersistInDatabase:
    true\n          datasource: GEO_LOCATION_DATA\n   #Enabling GRPC Service with
    an Extension\n    -\n      extension:\n        name: 'grpc'\n        namespace:
    'source'\n        properties:\n          keyStoreFile : ${sys:carbon.home}/resources/security/wso2carbon.jks\n
    \         keyStorePassword : wso2carbon\n          keyStoreAlgorithm : SunX509\n
    \         trustStoreFile : ${sys:carbon.home}/resources/security/client-truststore.jks\n
    \         trustStorePassword : wso2carbon\n          trustStoreAlgorithm : SunX509\n\n
    \ # Cluster Configuration\ncluster.config:\n  enabled: false\n  groupId:  sp\n
    \ coordinationStrategyClass: org.wso2.carbon.cluster.coordinator.rdbms.RDBMSCoordinationStrategy\n
    \ strategyConfig:\n    datasource: WSO2_CLUSTER_DB\n    heartbeatInterval: 1000\n
    \   heartbeatMaxRetry: 2\n    eventPollingInterval: 1000\n\n# Authentication configuration\nauth.configs:\n
    \ type: 'local'        # Type of the IdP client used\n  userManager:\n    adminRole:
    admin   # Admin role which is granted all permissions\n    userStore:         #
    User store\n      users:\n       -\n         user:\n           username: admin\n
    \          password: YWRtaW4=\n           roles: 1\n      roles:\n       -\n         role:\n
    \          id: 1\n           displayName: admin\n\n  # Configuration to enable
    apim alerts\n#analytics.solutions:\n#  APIM-alerts.enabled: true\n\n\n  # Sample
    of deployment.config for Two node HA\n#deployment.config:\n#  type: ha\n#  eventSyncServer:\n#
    \   host: localhost\n#    port: 9893\n#    advertisedHost: localhost\n#    advertisedPort:
    9893\n#    bossThreads: 10\n#    workerThreads: 10\n#  eventSyncClientPool:\n#
    \   maxActive: 10\n#    maxTotal: 10\n#    maxIdle: 10\n#    maxWait: 60000\n#
    \   minEvictableIdleTimeMillis: 120000\n\n  # Sample of deployment.config for
    Distributed deployment\n#deployment.config:\n#  type: distributed\n#  httpsInterface:\n#
    \   host: 192.168.1.3\n#    port: 9443\n#    username: admin\n#    password: admin\n#
    \ leaderRetryInterval: 10000\n#  resourceManagers:\n#    - host: 192.168.1.1\n#
    \     port: 9543\n#      username: admin\n#      password: admin\n#    - host:
    192.168.1.2\n#      port: 9543\n#      username: admin\n#      password: admin\n"